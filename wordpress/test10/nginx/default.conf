# default.conf
# redirect to HTTPS

upstream memcached-servers {
    server wp-mem:11211;
}

server {
    listen 80;
    listen [::]:80;
    server_name $host;
    location / {
        # update port as needed for host mapped https
        rewrite ^ https://$host:8443$request_uri? permanent;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name $host;
    index index.php index.html index.htm;
    root /var/www/html;
    server_tokens off;
    # client_max_body_size 75M;
    client_max_body_size 1024M;
    client_body_timeout 900s;
    fastcgi_buffers 16 16k; 
    fastcgi_buffer_size 32k;
    send_timeout 3600;
    keepalive_timeout 60m;
    fastcgi_send_timeout 3600s;
    fastcgi_read_timeout 3600s;

    # update ssl files as required by your deployment
    ssl_certificate     /etc/ssl/fullchain.pem;
    ssl_certificate_key /etc/ssl/privkey.pem;

    # logging
    access_log /var/log/nginx/wordpress.access.log;
    error_log  /var/log/nginx/wordpress.error.log;

    # some security headers ( optional )
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri = 404;
        # fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # fastcgi_index index.php;
        fastcgi_index                           index.php;
        fastcgi_connect_timeout                 10;
        fastcgi_send_timeout                    180;
        fastcgi_read_timeout                    180;
        fastcgi_buffer_size                     512k;
        fastcgi_buffers                         4       256k;
        fastcgi_busy_buffers_size               512k;
        fastcgi_temp_file_write_size            512k;
        fastcgi_intercept_errors                on;
        fastcgi_split_path_info                 ^(.+\.php)(/.*)$;
        fastcgi_keep_conn                       on;
        fastcgi_param   QUERY_STRING            $query_string;
        fastcgi_param   REQUEST_METHOD          $request_method;
        fastcgi_param   CONTENT_TYPE            $content_type;
        fastcgi_param   CONTENT_LENGTH          $content_length;
        fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;
        fastcgi_param   SCRIPT_NAME             $fastcgi_script_name;
        fastcgi_param   REQUEST_URI             $request_uri;
        fastcgi_param   DOCUMENT_URI            $document_uri;
        fastcgi_param   DOCUMENT_ROOT           $document_root;
        fastcgi_param   SERVER_PROTOCOL         $server_protocol;
        fastcgi_param   GATEWAY_INTERFACE       CGI/1.1;
        fastcgi_param   SERVER_SOFTWARE         nginx;
        fastcgi_param   REMOTE_ADDR             $remote_addr;
        fastcgi_param   REMOTE_PORT             $remote_port;
        fastcgi_param   SERVER_ADDR             $server_addr;
        fastcgi_param   SERVER_PORT             $server_port;
        fastcgi_param   SERVER_NAME             $server_name;
        fastcgi_param   PATH_INFO               $fastcgi_path_info;
        fastcgi_param   PATH_TRANSLATED         $document_root$fastcgi_path_info;
        fastcgi_param   REDIRECT_STATUS         200;

        fastcgi_param  HTTPS                    $https if_not_empty;
        fastcgi_param  SSL_PROTOCOL             $ssl_protocol if_not_empty;
        fastcgi_param  SSL_CIPHER               $ssl_cipher if_not_empty;
        fastcgi_param  SSL_SESSION_ID           $ssl_session_id if_not_empty;
        fastcgi_param  SSL_CLIENT_VERIFY        $ssl_client_verify if_not_empty;

        fastcgi_pass wordpress:9000;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    location ~ /\.ht {
        deny all;
    }

    location = /favicon.ico {
        log_not_found off; access_log off;
    }

    location = /favicon.svg {
        log_not_found off; access_log off;
    }

    location = /robots.txt {
        log_not_found off; access_log off; allow all;
    }

    location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
        expires max;
        log_not_found off;
    }

    # try to get result from memcached
    location @memcached {
        default_type text/html;
        set $memcached_key data-$scheme://$host$request_uri;
        set $memcached_request 1;

        # exceptions
        # avoid cache serve of POST requests
        if ($request_method = POST ) {
            set $memcached_request 0;
        }

        # avoid cache serve of wp-admin-like pages, starting with "wp-"
        if ( $uri ~ "/wp-" ) {
            set $memcached_request 0;
        }

        # avoid cache serve of any URL with query strings
        if ( $args ) {
            set $memcached_request 0;
        }

        if ($http_cookie ~* "comment_author_|wordpressuser_|wp-postpass_|wordpress_logged_in_" ) {
            set $memcached_request 0;
        }

        if ( $memcached_request = 1) {
            add_header X-Cache-Engine "WP-FFPC with memcache via nginx";
            memcached_pass memcached-servers;
            error_page 404 = @rewrites;
        }

        if ( $memcached_request = 0) {
            rewrite ^ /index.php last;
        }
    }

    location @rewrites {
        add_header X-Cache-Engine "No cache";
        rewrite ^ /index.php last;
    }

}
