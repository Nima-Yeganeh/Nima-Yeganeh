user nginx;
worker_processes 1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    # read more here http://tautt.com/best-nginx-configuration-for-security/

    # don't send the nginx version number in error pages and Server header
    server_tokens off;

    # config to don't allow the browser to render the page inside an frame or iframe
    # and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
    # if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
    # https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
    add_header X-Frame-Options SAMEORIGIN;

    # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
    # to disable content-type sniffing on some browsers.
    # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
    # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
    # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
    # 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
    add_header X-Content-Type-Options nosniff;

    # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
    # It's usually enabled by default anyway, so the role of this header is to re-enable the filter for 
    # this particular website if it was disabled by the user.
    # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
    add_header X-XSS-Protection "1; mode=block";

    # with Content Security Policy (CSP) enabled(and a browser that supports it(http://caniuse.com/#feat=contentsecuritypolicy),
    # you can tell the browser that it can only download content from the domains you explicitly allow
    # http://www.html5rocks.com/en/tutorials/security/content-security-policy/
    # https://www.owasp.org/index.php/Content_Security_Policy
    # I need to change our application code so we can increase security by disabling 'unsafe-inline' 'unsafe-eval'
    # directives for css and js(if you have inline css or js, you will need to keep it too).
    # more: http://www.html5rocks.com/en/tutorials/security/content-security-policy/#inline-code-considered-harmful
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com https://assets.zendesk.com https://connect.facebook.net; img-src 'self' https://ssl.google-analytics.com https://s-static.ak.facebook.com https://assets.zendesk.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://assets.zendesk.com; font-src 'self' https://themes.googleusercontent.com; frame-src https://assets.zendesk.com https://www.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com; object-src 'none'";

    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascr                                                                    ipt;


    server {
        listen   80; ## listen for ipv4; this line is default and implied
        listen   [::]:80 default ipv6only=on; ## listen for ipv6

        charset UTF-8;
        root /var/www/html;
        index index.php index.html index.htm;

        server_name localhost;

        location / {
                try_files $uri $uri/ @memcached;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires 24h;
                log_not_found off;
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
                root /var/www/html;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ (\.php) {
            try_files $uri =404;
            fastcgi_index                           index.php;
            fastcgi_connect_timeout                 10;
            fastcgi_send_timeout                    180;
            fastcgi_read_timeout                    180;
            fastcgi_buffer_size                     512k;
            fastcgi_buffers                         4       256k;
            fastcgi_busy_buffers_size               512k;
            fastcgi_temp_file_write_size            512k;
            fastcgi_intercept_errors                on;
            fastcgi_split_path_info                 ^(.+\.php)(/.*)$;
            fastcgi_keep_conn                       on;

            fastcgi_param   QUERY_STRING            $query_string;
            fastcgi_param   REQUEST_METHOD          $request_method;
            fastcgi_param   CONTENT_TYPE            $content_type;
            fastcgi_param   CONTENT_LENGTH          $content_length;
            fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;
            fastcgi_param   SCRIPT_NAME             $fastcgi_script_name;
            fastcgi_param   REQUEST_URI             $request_uri;
            fastcgi_param   DOCUMENT_URI            $document_uri;
            fastcgi_param   DOCUMENT_ROOT           $document_root;
            fastcgi_param   SERVER_PROTOCOL         $server_protocol;
            fastcgi_param   GATEWAY_INTERFACE       CGI/1.1;
            fastcgi_param   SERVER_SOFTWARE         nginx;
            fastcgi_param   REMOTE_ADDR             $remote_addr;
            fastcgi_param   REMOTE_PORT             $remote_port;
            fastcgi_param   SERVER_ADDR             $server_addr;
            fastcgi_param   SERVER_PORT             $server_port;
            fastcgi_param   SERVER_NAME             $server_name;
            fastcgi_param   PATH_INFO               $fastcgi_path_info;
            fastcgi_param   PATH_TRANSLATED         $document_root$fastcgi_path_info;
            fastcgi_param   REDIRECT_STATUS         200;

            # uncomment these for HTTPS usage
            #fastcgi_param  HTTPS                   $https if_not_empty;
            #fastcgi_param  SSL_PROTOCOL            $ssl_protocol if_not_empty;
            #fastcgi_param  SSL_CIPHER              $ssl_cipher if_not_empty;
            #fastcgi_param  SSL_SESSION_ID          $ssl_session_id if_not_empty;
            #fastcgi_param  SSL_CLIENT_VERIFY       $ssl_client_verify if_not_empty;

            fastcgi_pass wordpress:9000;
        }

        # try to get result from memcached
        location @memcached {
            default_type text/html;
            set $memcached_key data-$scheme://$host$request_uri;
            set $memcached_request 1;

            # exceptions
            # avoid cache serve of POST requests
            if ($request_method = POST ) {
                set $memcached_request 0;
            }

            # avoid cache serve of wp-admin-like pages, starting with "wp-"
            if ( $uri ~ "/wp-" ) {
                set $memcached_request 0;
            }

            # avoid cache serve of any URL with query strings
            if ( $args ) {
                set $memcached_request 0;
            }

            if ($http_cookie ~* "comment_author_|wordpressuser_|wp-postpass_|wordpress_logged_in_" ) {
                set $memcached_request 0;
            }


            if ( $memcached_request = 1) {
                add_header X-Cache-Engine "WP-FFPC with memcache via nginx";
                memcached_pass memcached-servers;
                error_page 404 = @rewrites;
            }

            if ( $memcached_request = 0) {
                rewrite ^ /index.php last;
            }
        }

        location @rewrites {
                add_header X-Cache-Engine "No cache";
                rewrite ^ /index.php last;
        }

    }

    upstream memcached-servers {
        server wp-memcached:11211;
    }
}
